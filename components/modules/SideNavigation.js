import { useContext, useState, useEffect, useRef } from "react";
import { AuthContect } from "../../contexts/AuthContext";
import Link from "next/link";
import { AnimatePresence } from "framer-motion";
import { motion } from "framer-motion";
import TopicsBox from "../UI/TopicsBox";
import FooterIcons from "../commonComponents/footerIcons";
import DarkFooterIcons from "../commonComponents/DarkFooterIcons";
// import HeaderAccordion from '../headerAccordion/HeaderAccordion';
import styles from "../../styles/headerScss/SideNavigation.module.scss";

const Data = [
  {
    topic: "Topics",
    item1: "Trading",
    item2: "Security",
    item3: "Python",
    item4: "Blockchain",
    item5: "Crypto",
    item6: "See all",
  },
];

function SideNavigation({ setBurger }) {
  const ref = useRef();
  const topicsWrap = useRef();
  const [modal, setModal] = useState(false);
  const [infoBox, setInfoBox] = useState(false);
  const [topicsBox, setTopicsBox] = useState(false);
  const { isLogged } = useContext(AuthContect);

  const handleConnectClick = () => {
    isLogged ? setInfoBox(!infoBox) : setModal(!modal);
  };

  const closeModal = () => {
    setModal(false);
  };

  const closeInfoBox = () => {
    setInfoBox(false);
    setModal(false);
  };
  useEffect(() => {
    const checkIfClickedOutside = (e) => {
      if (infoBox && ref.current && !ref.current.contains(e.target)) {
        setInfoBox(false);
      }

      if (
        topicsBox &&
        topicsWrap.current &&
        !topicsWrap.current.contains(e.target)
      ) {
        setTopicsBox(false);
      }
    };

    document.addEventListener("mousedown", checkIfClickedOutside);

    return () => {
      document.removeEventListener("mousedown", checkIfClickedOutside);
    };
  }, [infoBox, topicsBox]);

  const [theme, setTheme] = useState(null);

  useEffect(() => {
    if (theme != null) {
      const body = document.getElementsByTagName("body")[0];
      if (theme) {
        body.classList.add("light");
        localStorage.setItem('mode', 'true')
      } else {
        body.classList.remove("light");
        localStorage.setItem('mode', 'false')
      }
    }
  }, [theme]);

  useEffect(() => {
    const mode = localStorage.getItem('mode');
    !mode || mode === 'false' ? setTheme(false) : setTheme(true);
  }, [])
  const [clicked, setClicked] = useState(false);
  const toggle = (index) => {
    if (clicked === index) {
      setClicked(null);
    } else {
      setClicked(index);
    }
  };

  return (
    <motion.div
      className={styles.mobNavigation}
      initial={{ x: 100, opacity: 0 }}
      animate={{ x: 0, opacity: 1 }}
      exit={{ x: 100, opacity: 0 }}
    >
      <div className={styles.top}>
        <Link href="/">
          <a className={styles.logo}>
            {/* <div className="lightLogo">
              <img src="/svg/lightLogo.svg" alt="logo" />
            </div> */}
            {/* <div className="darkLogo"> */}
            <div>
              <svg
                width="120"
                height="27"
                viewBox="0 0 120 27"
                fill="none"
                xmlns="http://www.w3.org/2000/svg"
              >
                <g clipPath="url(#clip0_4268_1361)">
                  <path
                    d="M4.16547 11.6559C4.16539 13.3051 4.69201 14.9098 5.66618 16.2288C6.64036 17.5478 8.00945 18.5098 9.56767 18.9702V23.3091C6.88152 22.8137 4.45174 21.3756 2.70213 19.2457C0.952525 17.1157 -0.00585938 14.4292 -0.00585937 11.6545C-0.00585938 8.87993 0.952525 6.19336 2.70213 4.06344C4.45174 1.93352 6.88152 0.495424 9.56767 0V4.34295C8.00955 4.80308 6.6405 5.76482 5.66632 7.08357C4.69213 8.40232 4.16546 10.0068 4.16547 11.6559Z"
                    fill="white"
                  />
                  <path
                    d="M14.9589 11.6565C14.9592 12.326 14.7641 12.9805 14.3984 13.5372C14.0326 14.094 13.5126 14.528 12.9042 14.7843C12.2957 15.0407 11.6261 15.1079 10.98 14.9775C10.334 14.847 9.7405 14.5248 9.27465 14.0515C8.8088 13.5783 8.49151 12.9752 8.36291 12.3187C8.23431 11.6621 8.30018 10.9815 8.55219 10.363C8.80419 9.74452 9.23101 9.21586 9.77867 8.84391C10.3263 8.47197 10.9702 8.27344 11.6289 8.27344C12.5117 8.27379 13.3583 8.6303 13.9827 9.26464C14.6071 9.89898 14.9582 10.7593 14.9589 11.6565Z"
                    fill="#161616"
                  />
                  <path
                    d="M23.3036 11.6559V23.3091H19.142V11.6559C19.1419 10.0045 18.6136 8.39782 17.6368 7.07807C16.66 5.75833 15.2877 4.79698 13.7266 4.3389V0C16.4135 0.494967 18.8441 1.933 20.5944 4.06322C22.3447 6.19344 23.3035 8.8806 23.3036 11.6559Z"
                    fill="white"
                  />
                  <path
                    d="M32.0787 6.75025C30.9506 6.75025 30.092 6.4573 29.5032 5.8714C28.9143 5.2855 28.619 4.47055 28.6172 3.42655C28.6172 2.33575 28.9054 1.492 29.4819 0.895296C30.0584 0.298596 30.9205 0.000246288 32.0681 0.000246288C32.4217 -0.00309886 32.7749 0.0276387 33.1228 0.0920463C33.4267 0.150835 33.726 0.23251 34.0181 0.336396V1.76875C33.4377 1.52514 32.8156 1.40079 32.1877 1.4029C31.5208 1.4029 31.0338 1.5658 30.7265 1.8916C30.4192 2.2174 30.2643 2.72905 30.2616 3.42655C30.2616 4.09075 30.425 4.57855 30.7518 4.88995C31.0785 5.20135 31.5656 5.3575 32.2129 5.3584C32.5248 5.35822 32.8361 5.32884 33.1427 5.27065C33.4481 5.21346 33.7464 5.12293 34.0327 5.00065V6.44515C33.7421 6.54276 33.4445 6.61768 33.1427 6.66925C32.7913 6.72634 32.4359 6.75343 32.0801 6.75025"
                    fill="white"
                  />
                  <path
                    d="M37.7593 6.75C36.7126 6.75 35.9156 6.48 35.3684 5.94C34.8211 5.4 34.5479 4.55535 34.5488 3.40605C34.5488 2.19195 34.822 1.32075 35.3684 0.79245C35.9148 0.26415 36.7117 0 37.7593 0C38.806 0 39.603 0.26415 40.1502 0.79245C40.6975 1.32075 40.9711 2.19195 40.9711 3.40605C40.9711 4.55085 40.6975 5.3946 40.1502 5.9373C39.603 6.48 38.806 6.75 37.7593 6.7473V6.75ZM37.7593 5.3541C38.2986 5.3541 38.6936 5.1966 38.9442 4.8816C39.1948 4.5666 39.3192 4.07475 39.3174 3.40605C39.3174 2.673 39.1925 2.1573 38.9428 1.8549C38.6931 1.5525 38.2973 1.40265 37.758 1.40265C37.2187 1.40265 36.8122 1.55385 36.5625 1.8549C36.3128 2.15595 36.1866 2.673 36.1866 3.40605C36.1866 4.07745 36.3119 4.57245 36.5625 4.89105C36.8131 5.20965 37.2116 5.36715 37.758 5.36355"
                    fill="white"
                  />
                  <path
                    d="M41.7891 6.64906V0.101562H45.0102C45.77 0.101562 46.3301 0.304962 46.6905 0.711762C47.0509 1.11856 47.2311 1.66441 47.2311 2.34931C47.2409 2.75593 47.1283 3.1559 46.9082 3.49562C46.6881 3.83535 46.3712 4.0986 45.9998 4.25011C46.0888 4.3188 46.1652 4.40289 46.2256 4.49851C46.2968 4.62078 46.3586 4.74852 46.4102 4.88056L47.1713 6.64906H45.4897L44.7698 4.98181C44.7241 4.85804 44.6443 4.75024 44.54 4.67131C44.4194 4.60009 44.2807 4.56674 44.1415 4.57546H43.4016V6.64906H41.7891ZM43.4003 3.31456H44.5958C44.8614 3.33122 45.1235 3.24595 45.3303 3.07561C45.4237 2.98134 45.4959 2.86756 45.5417 2.74215C45.5876 2.61675 45.6061 2.48271 45.596 2.34931C45.596 1.69231 45.286 1.36336 44.6662 1.36246H43.4069L43.4003 3.31456Z"
                    fill="white"
                  />
                  <path
                    d="M48.0518 6.64906V0.101562H52.8031V1.36246H49.663V2.73541H52.4325V4.01656H49.663V5.38816H52.8031V6.64906H48.0518Z"
                    fill="white"
                  />
                  <path
                    d="M32.2926 23.3102C31.6663 23.3154 31.0454 23.1933 30.4662 22.9511C29.9203 22.7279 29.452 22.345 29.1206 21.8509C28.785 21.3541 28.6172 20.7353 28.6172 19.9946C28.6172 18.9146 28.978 18.0659 29.6998 17.4485C30.4215 16.8311 31.5045 16.5233 32.9488 16.5251H35.8365V16.2808C35.8365 15.748 35.6594 15.3664 35.3052 15.136C34.9558 14.9065 34.2983 14.7917 33.3366 14.7917C32.1557 14.7915 30.9819 14.9787 29.8578 15.3466V13.0367C30.463 12.8039 31.0895 12.633 31.7281 12.5264C32.4973 12.3897 33.277 12.3224 34.0579 12.3253C35.6625 12.3253 36.9204 12.6592 37.8316 13.327C38.7428 13.9948 39.1989 15.0545 39.1997 16.5062V23.0861H36.1207L35.9467 22.1965C35.525 22.5766 35.0262 22.8577 34.4856 23.02C33.7716 23.2294 33.0302 23.3268 32.2873 23.3089L32.2926 23.3102ZM33.403 21.107C33.8993 21.1192 34.3922 21.0206 34.8469 20.8181C35.2236 20.6496 35.5596 20.3994 35.8312 20.0851V18.6001H33.3406C32.3045 18.6001 31.7865 19.0226 31.7865 19.8677C31.7791 20.0406 31.8112 20.2128 31.8804 20.371C31.9495 20.5291 32.0538 20.6687 32.185 20.779C32.4507 21.0017 32.8558 21.1124 33.4097 21.1124"
                    fill="white"
                  />
                  <path
                    d="M46.7976 23.3102C44.9442 23.3102 43.4968 22.8508 42.4554 21.9319C41.414 21.013 40.8924 19.6427 40.8906 17.8211C40.8906 15.968 41.4339 14.5892 42.5204 13.6847C43.607 12.7802 45.0544 12.3302 46.8627 12.3347C47.5266 12.3268 48.1897 12.3829 48.8432 12.5021C49.4066 12.6119 49.9542 12.7933 50.473 13.0421V15.5761C49.6556 15.1765 48.7002 14.9762 47.6065 14.9753C46.5864 14.9753 45.8098 15.1832 45.2767 15.599C44.7436 16.0148 44.4779 16.756 44.4797 17.8225C44.4797 18.8125 44.7276 19.5352 45.2235 19.9906C45.7194 20.446 46.5071 20.671 47.5866 20.6656C48.5947 20.6784 49.5917 20.4499 50.4969 19.9987V22.6447C49.9549 22.887 49.385 23.0589 48.8007 23.1563C48.1387 23.2638 47.4692 23.3158 46.7989 23.3116"
                    fill="white"
                  />
                  <path
                    d="M55.523 23.3103C54.8976 23.3147 54.2777 23.1927 53.6992 22.9511C53.1539 22.7276 52.6861 22.3447 52.355 21.8509C52.0194 21.3541 51.8516 20.7353 51.8516 19.9946C51.8516 18.9146 52.2124 18.0659 52.9341 17.4485C53.6558 16.8311 54.7402 16.5242 56.1871 16.5278H59.0748V16.2835C59.0748 15.7507 58.8999 15.3691 58.5502 15.1387C58.2004 14.9083 57.5437 14.7935 56.5803 14.7944C55.3998 14.7943 54.2265 14.9815 53.1028 15.3493V13.0367C53.708 12.8038 54.3345 12.6328 54.9731 12.5264C55.7423 12.3897 56.522 12.3224 57.3029 12.3253C58.9075 12.3253 60.1654 12.6592 61.0766 13.327C61.9878 13.9948 62.4434 15.0545 62.4434 16.5062V23.0861H59.3551L59.1798 22.1965C58.7603 22.5762 58.2637 22.8573 57.7253 23.02C57.01 23.2301 56.2673 23.328 55.523 23.3103ZM56.6387 21.1084C57.135 21.1204 57.6278 21.0218 58.0826 20.8195C58.4591 20.6506 58.795 20.4005 59.0669 20.0864V18.6014H56.5763C55.5411 18.6014 55.0235 19.024 55.0235 19.8691C55.0164 20.0419 55.0487 20.2141 55.1178 20.3721C55.1869 20.5302 55.291 20.6699 55.422 20.7803C55.6877 21.0031 56.0928 21.1138 56.648 21.1138"
                    fill="white"
                  />
                  <path
                    d="M68.916 23.3097C67.9092 23.3097 67.0484 23.1468 66.3338 22.821C65.6169 22.4953 65.0347 21.9251 64.688 21.2091C64.3081 20.4603 64.1182 19.4559 64.1182 18.1959C64.1182 16.9197 64.3373 15.8487 64.7757 14.9829C65.1737 14.1581 65.8008 13.4701 66.5795 13.0038C67.3831 12.5429 68.2937 12.3098 69.2162 12.3288C69.7089 12.3221 70.2002 12.382 70.6773 12.507C71.1059 12.6266 71.5153 12.8085 71.8927 13.047V8.10059H75.4141V23.0856H72.3723L72.1757 22.1959C71.7581 22.5636 71.2752 22.8468 70.753 23.0302C70.1602 23.2261 69.5393 23.3201 68.916 23.3083V23.3097ZM69.9215 20.7069C70.2859 20.7142 70.648 20.6471 70.9863 20.5096C71.3247 20.3721 71.6325 20.167 71.8914 19.9063V15.639C71.3946 15.1791 70.7601 14.9491 69.9879 14.9491C69.2441 14.9491 68.6787 15.2344 68.2917 15.805C67.9047 16.3756 67.7117 17.1798 67.7126 18.2175C67.7126 19.2255 67.8985 19.8924 68.2704 20.2182C68.6424 20.544 69.1927 20.7073 69.9215 20.7082"
                    fill="white"
                  />
                  <path
                    d="M82.9849 23.3089C81.1757 23.3089 79.7243 22.8531 78.6307 21.9414C77.5371 21.0297 76.9902 19.6558 76.9902 17.8198C76.9902 16.1449 77.4423 14.8107 78.3464 13.8171C79.2506 12.8235 80.6072 12.3285 82.4164 12.3321C84.0652 12.3321 85.3413 12.7623 86.2445 13.6227C87.1478 14.4831 87.5998 15.6391 87.6007 17.0908V18.9808H80.2499C80.4111 19.6774 80.7865 20.163 81.3763 20.4375C81.9661 20.712 82.7719 20.847 83.7938 20.8425C84.3772 20.841 84.9593 20.7886 85.5339 20.6859C86.0391 20.6049 86.5342 20.4691 87.0109 20.2809V22.615C86.4473 22.8728 85.8508 23.0486 85.239 23.1375C84.4918 23.254 83.7368 23.31 82.9809 23.3049L82.9849 23.3089ZM80.2459 16.9005H84.5337V16.4334C84.5449 16.2067 84.51 15.9801 84.4311 15.7678C84.3523 15.5555 84.2312 15.362 84.0754 15.1995C83.7681 14.8962 83.2501 14.7445 82.5213 14.7445C81.6747 14.7445 81.0841 14.9187 80.7493 15.267C80.4146 15.6153 80.2468 16.1598 80.2459 16.9005Z"
                    fill="white"
                  />
                  <path
                    d="M89.3926 23.0864V12.5483H92.6522L92.7612 13.4825C93.2464 13.1327 93.7765 12.852 94.3365 12.6482C94.9406 12.4297 95.5776 12.3205 96.2187 12.3255C96.9183 12.3255 97.4651 12.4331 97.8592 12.6482C98.2431 12.854 98.5618 13.1662 98.7784 13.5486C99.2799 13.1822 99.8282 12.887 100.408 12.6711C101.094 12.4275 101.817 12.3105 102.543 12.3255C103.752 12.3255 104.642 12.6446 105.211 13.2827C105.781 13.9208 106.065 14.8937 106.063 16.2014V23.0864H102.584V16.6172C102.584 16.0394 102.464 15.6209 102.223 15.3617C101.982 15.1025 101.592 14.9715 101.052 14.9715C100.714 14.9726 100.378 15.0447 100.068 15.1835C99.7584 15.3159 99.4815 15.517 99.2579 15.7721C99.2863 15.9264 99.3045 16.0824 99.3124 16.2392C99.3203 16.3877 99.3243 16.5677 99.3243 16.7792V23.0864H96.0421V16.5726C96.0421 16.0389 95.9509 15.6389 95.7684 15.3725C95.586 15.1061 95.2398 14.9711 94.7297 14.9675C94.3673 14.9669 94.0118 15.0672 93.7016 15.2577C93.3857 15.4452 93.092 15.669 92.8262 15.9246V23.0796L89.3926 23.0864Z"
                    fill="white"
                  />
                  <path
                    d="M110.725 27C110.275 27.0048 109.826 26.9786 109.379 26.9217C109 26.8684 108.629 26.7677 108.274 26.622V24.1312C108.497 24.2139 108.728 24.2736 108.963 24.3094C109.177 24.3393 109.393 24.3542 109.609 24.354C110.207 24.354 110.655 24.2464 110.955 24.0313C111.254 23.8162 111.556 23.4346 111.862 22.8865L107.202 12.5469H110.9L113.634 19.2402L116.325 12.5469H120L116.041 22.2196C115.689 23.1038 115.249 23.9493 114.728 24.7428C114.292 25.4176 113.715 25.9871 113.039 26.4114C112.399 26.8038 111.628 27 110.725 27Z"
                    fill="white"
                  />
                </g>
                <defs>
                  <clipPath id="clip0_4268_1361">
                    <rect width="120" height="27" fill="white" />
                  </clipPath>
                </defs>
              </svg>
            </div>
          </a>
        </Link>
        <div className={styles.connectBtnWrap} ref={ref}>
          <button
            className={`${styles.connectBtn} ${isLogged ? styles.connected : ""
              }`}
            onClick={handleConnectClick}
          >
            {isLogged ? (
              <>
                <span>sWallet</span>
                <span className={styles.arrow}>
                  <svg
                    width="8"
                    height="5"
                    viewBox="0 0 8 5"
                    fill="none"
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <path
                      d="M0.234315 0.533143C0.546734 0.220723 1.05327 0.220723 1.36569 0.533143L4 3.16746L6.63432 0.533143C6.94673 0.220723 7.45327 0.220723 7.76569 0.533143C8.0781 0.845562 8.0781 1.35209 7.76569 1.66451L5.13134 4.29886C4.50781 4.92239 3.49219 4.92239 2.86866 4.29886L0.234315 1.66451C-0.0781049 1.35209 -0.0781049 0.845562 0.234315 0.533143Z"
                      fill="white"
                    />
                  </svg>
                </span>
              </>
            ) : (
              <span>Wallet</span>
            )}
          </button>
          <div ref={ref}>
            <AnimatePresence>
              {infoBox && isLogged && (
                <WalletInfoBox closeInfoBox={closeInfoBox} key="info-box" />
              )}
            </AnimatePresence>
          </div>
        </div>
        <button className={styles.close} onClick={() => setBurger(false)}>
          <svg
            width="24"
            height="24"
            viewBox="0 0 24 24"
            fill="none"
            xmlns="http://www.w3.org/2000/svg"
          >
            {" "}
            <path d="M23 1L1 23" stroke="white"></path>{" "}
            <path d="M1 1L23 23" stroke="white"></path>{" "}
          </svg>
        </button>
      </div>

      <ul className={styles.list}>
        <li className={styles.listItem}>
          <Link href="/page">
            <a className={styles.item}>Home</a>
          </Link>
        </li>
        <li className={styles.listItem}>
          <Link href="pages/introduction">
            <a className={styles.item}>Get Started</a>
          </Link>
        </li>

        <li className={styles.listItem}>
          {" "}
          <div className={styles.Accordion}>
            <div className={styles.container}>
              {Data.map((item, index) => {
                return (
                  <div key={index}>
                    <div
                      onClick={() => {
                        toggle(index);
                      }}
                      className={styles.wrap}
                    >
                      <h4 className={styles.h4}>{item.topic}</h4>
                      <div
                        className={`${styles.toggle} ${clicked === index ? styles.active : ""
                          }`}
                      >
                        <span>
                          <svg
                            className={styles.arrow}
                            width="11"
                            height="6"
                            viewBox="0 0 11 6"
                            fill="none"
                            xmlns="http://www.w3.org/2000/svg"
                          >
                            {" "}
                            <path
                              d="M9.44588 0.281726L5.5 4.2276L1.55412 0.281724L0.500001 1.33585L4.44588 5.28172C4.72548 5.56124 5.10465 5.71826 5.5 5.71826C5.89535 5.71826 6.27452 5.56124 6.55412 5.28172L10.5 1.33585L9.44588 0.281726Z"
                              fill="white"
                            ></path>{" "}
                          </svg>
                        </span>
                      </div>
                    </div>
                    {clicked === index ? (
                      <div className={styles.dropdown}>
                        <div className={styles.list}>
                          <p className={styles.paragraph}>{item.item1}</p>
                        </div>
                        <div className={styles.list}>
                          <p className={styles.paragraph}>{item.item2}</p>
                        </div>
                        <div className={styles.list}>
                          <p className={styles.paragraph}>{item.item3}</p>
                        </div>
                        <div className={styles.list}>
                          <p className={styles.paragraph}>{item.item4}</p>
                        </div>
                        <div className={styles.list}>
                          <p className={styles.paragraph}>{item.item5}</p>
                        </div>
                        <div className={styles.list}>
                          <p className={styles.paragraph}>{item.item6}</p>
                        </div>
                      </div>
                    ) : null}
                  </div>
                );
              })}
            </div>
          </div>
        </li>
        <li className={styles.listItem}>
          {/* <Link href="/"> */}
          <a className={styles.item}>
            <label className={styles.switcher}>
              <input
                className={styles.input}
                type="checkbox"
                checked={theme}
                onChange={(event) => setTheme(event.target.checked)}
              />
              <div className={styles.marker}>
                <div>
                  <div className={styles.themes}>
                    <p className={styles.mode}>Light Mode</p>
                    <svg
                      width="24"
                      height="24"
                      viewBox="0 0 24 24"
                      fill="none"
                      xmlns="http://www.w3.org/2000/svg"
                    >
                      <path
                        fillRule="evenodd"
                        clipRule="evenodd"
                        d="M12.0002 6.25293C8.82461 6.25293 6.25024 8.82729 6.25024 12.0029C6.25024 15.1786 8.82461 17.7529 12.0002 17.7529C15.1759 17.7529 17.7502 15.1786 17.7502 12.0029C17.7502 8.82729 15.1759 6.25293 12.0002 6.25293ZM4.75024 12.0029C4.75024 7.99886 7.99618 4.75293 12.0002 4.75293C16.0043 4.75293 19.2502 7.99886 19.2502 12.0029C19.2502 16.007 16.0043 19.2529 12.0002 19.2529C7.99618 19.2529 4.75024 16.007 4.75024 12.0029Z"
                        fill="white"
                      />
                      <path
                        fillRule="evenodd"
                        clipRule="evenodd"
                        d="M12.0002 1.00293C12.5525 1.00293 13.0002 1.45064 13.0002 2.00293V2.08293C13.0002 2.63521 12.5525 3.08293 12.0002 3.08293C11.448 3.08293 11.0002 2.63521 11.0002 2.08293V2.00293C11.0002 1.45064 11.448 1.00293 12.0002 1.00293ZM4.15314 4.15582C4.54366 3.7653 5.17683 3.7653 5.56735 4.15582L5.69735 4.28582C6.08787 4.67635 6.08787 5.30951 5.69735 5.70004C5.30683 6.09056 4.67366 6.09056 4.28314 5.70004L4.15314 5.57004C3.76261 5.17951 3.76261 4.54635 4.15314 4.15582ZM19.8473 4.15582C20.2379 4.54635 20.2379 5.17951 19.8474 5.57003L19.7174 5.70004C19.3268 6.09056 18.6937 6.09056 18.3031 5.70004C17.9126 5.30951 17.9126 4.67635 18.3031 4.28582L18.4331 4.15582C18.8237 3.7653 19.4568 3.7653 19.8473 4.15582ZM1.00024 12.0029C1.00024 11.4506 1.44796 11.0029 2.00024 11.0029H2.08024C2.63253 11.0029 3.08024 11.4506 3.08024 12.0029C3.08024 12.5552 2.63253 13.0029 2.08024 13.0029H2.00024C1.44796 13.0029 1.00024 12.5552 1.00024 12.0029ZM20.9202 12.0029C20.9202 11.4506 21.368 11.0029 21.9202 11.0029H22.0002C22.5525 11.0029 23.0002 11.4506 23.0002 12.0029C23.0002 12.5552 22.5525 13.0029 22.0002 13.0029H21.9202C21.368 13.0029 20.9202 12.5552 20.9202 12.0029ZM5.69735 18.3058C6.08788 18.6964 6.08787 19.3295 5.69735 19.72L5.56735 19.85C5.17682 20.2406 4.54366 20.2406 4.15314 19.85C3.76261 19.4595 3.76261 18.8263 4.15314 18.4358L4.28314 18.3058C4.67366 17.9153 5.30683 17.9153 5.69735 18.3058ZM18.3031 18.3058C18.6937 17.9153 19.3268 17.9153 19.7174 18.3058L19.8474 18.4358C20.2379 18.8263 20.2379 19.4595 19.8474 19.85C19.4568 20.2406 18.8237 20.2406 18.4331 19.85L18.3031 19.72C17.9126 19.3295 17.9126 18.6963 18.3031 18.3058ZM12.0002 20.9229C12.5525 20.9229 13.0002 21.3706 13.0002 21.9229V22.0029C13.0002 22.5552 12.5525 23.0029 12.0002 23.0029C11.448 23.0029 11.0002 22.5552 11.0002 22.0029V21.9229C11.0002 21.3706 11.448 20.9229 12.0002 20.9229Z"
                        fill="white"
                      />
                    </svg>
                  </div>
                </div>
              </div>
            </label>
          </a>
        </li>
      </ul>
      <div className={styles.bottomLogo}>
        <h4>Following</h4>
        <div className={styles.mobNavigationIcons}>
          {/* <div className="lightLogo">
            <DarkFooterIcons />
          </div> */}
          {/* <div className="darkLogo"> */}
          <div>
            <FooterIcons />
          </div>
        </div>
        <div className={styles.copyrightbottom}>
          © CORE Multi-Chain, 2022 All rights reserved
        </div>
      </div>
    </motion.div>
  );
}

export default SideNavigation;
